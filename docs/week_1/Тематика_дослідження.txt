Шифрування за допомогою графіки. 
1. Я вважаю, що ця тематика відповідає темі і цілям циклу домашніх завдань.
2. Найближчим аналогом є графічна криптографія, яка дозволяє накладати одну на іншу нібито шумові картинки, в результаті чого отримується змістовне повідомлення.
3. Дослідження належить до таких напрямків комп’ютерних наук: “Computer Vision and Pattern Recognition”, “Cryptography and Security” і можливо частково “Computational Geometry”.
4. Основна ціль дослідження - отримати знання з теорії шифрування комп’ютерного бачення через розроблема програми, що буде зашифровувати повідомлення в графіки.
5. Це надзвичайно цікавий проект, адже його можна буде використовувати за межами курсу програмування. Теоретично деяка частина дослідження підпадає під мої знання, але багато чим прийдеться оволодіти, але саме в цьому суть - розвиватися.
6. Отримати програму, що буде шифрувати текст, а якщо вистачить часу, то і розшифровувати його.
7. Якщо я буду працювати в команді, я спробую добитися, щоб програма зображувала графік і зберігала файл з точками, які можуть знадобитися в ході дослідження.
8. Мені необхідно розібратися з такими речами, як: бібліотеки numpy та matplotlib, для зображення графіків та технологією computer vision, зокрема бібліотекою OpenCV для python.
9. OpenCV це важлива і об’ємна бібліотека, яка знаходиться в спільному доступі. Numpy та matplotlib є вільними бібліотеками python, текст, який програма буде шифрувати, можна знайти будь-де, чи самому написати, тому з отриманням даних проблем не має виникнути.
10. Найбільша проблема - брак знань. Для того, щоб звести ризик цієї проблеми до мінімума, я взяв два курси на coursera про CV. Більш точні можливі проблеми: програма буде хибно розпізнавати кольори чи рахувати кути нахилів прямих. Можливо також, що кількості кутів не вистачить, щоб зашифрувати всі символи utf-8. Тоді прийдеться придумати іншу методику, наприклад шифрувати текст двома графами, що зменшить ймовірність помилки, бо на кожен символ буде припадати більша кількість кутів.
11. 1. Шліфування методики, як шифрувати символи, чи використовувати кольори, точки чи додатковий граф.
2. Розподілення всіх символів за методикою, розрахованою вище
3. Написання програми, що буде визначати кут для кожного символа, будувати відрізок, та записувати ці дані у файл і в png зображення.
4. Написання програми, що буде витягати інформацію з зображення чи файлу з точками, розбивати по відрізках, та розшифровувати в текст.
12. Поки що я не знайшов інших людей, що хотіли б робити схожий проект.


Top Programming Languages for Image Recognition 
https://www.technotification.com/2018/11/programming-for-image-recognition.html
Ця стаття написана Cleophas Mulongo, який є спеціалістом в галузі технологій та інтернет маркетингу. Він має степінь з Комп’ютерних наук та 5 років стажем за спеціальністю.
В цій статті автор розповідає, які мови програмування найкраще підходять для написання софту розпізнавання зображень. Першим автор виділяє matlab. Він затверджує, що програма найбільше використовується для програм, що ефективно розпізнають обличчя. Основною задачею для цього завдання даної мови є обробка об’ємних 3-д зображень, тому це не підходить для мого дослідження.
Далі автор пропонує python, як найпоширеніша мова програмування, для якої є багато бібліотек для розпізнавання зображень. Автор пропонує бібліотеку “Scikit-Learn Machine Learning library”, яка здатна побачити рух, розпізнавати картинку та фотографію.
Частину статті автор присвячує мовам родині С. Тут є бібліотеки: OpenGL, EmguCV, OpenCV та інші, які мають таку ж властивість і здатні виконувати аналогічні задачі.
Так само автор дає поняття про Java, яка має доступ до OpenCV. Також ця мова дозволяє створити функціонал обробки зображення з нуля за допомогою різних модулів і додаткових бібліотек.
Далі мова йде про інструмент Open Source Computer Vision або OpenCV, який інтегрований в декілька перерахованих вище мов програмування. Ця бібліотека, за словами автора, дуже популярна через великі і зрозумілі документації, які спрощують роботу для нових користувачів.
З інформації, описаної автором, я обрав мову програмування Python через те, що я маю деякі навички володіння нею та OpenCV, як бібліотеку, що надзвичайно часто використовується для подібних проектів і має велику кількість прикладів, документації та курсів.


Geometry of Image Formation
https://www.learnopencv.com/geometry-of-image-formation/
Доктор Сат’я Малік, який написав цю статтю, є партнером Big Vision LLC і одним з розробників OpenCV.org. Його роботи виставлялися в таких місцях, як BBC, Time, Huffington Post, the Wall Street Journal, TechCrunch та інші. Після університету став одним з засновників Sight Commerce Inc., яка займається комп’ютерним баченням.
Ця стаття наповнена тим, як взагалі працює геометрія в зображення, як за допомогою математичних законів рахувати глибину чи точку, на яку зміниться інша при повороті, зміщені чи гомотетії. Спочатку Малік розповідає про світову систему координат і як вона сприймається камерою і пов’язується з системою координат камери, які є окремими і мають свої напрямки і особливості. Також тут йде мова про те, як визначити позицію певної точки в просторі, що є надзвичайно важливим для мого дослідження.
В наступному розділі мова йде про те, як влаштована система координат камери. Тут говориться про положення камери, матрицю і інші чинники, від яких залежить система координат.
Далі автор розповідає про те, як визначається позиція точки в просторі, побудову на її основі внутрішньої матриці. Далі на основі матриці точки та камери комп’ютер обробляє зображення і може точно вказати, які координати має точка.
Ця стаття надзвичайно корисна, якщо все ж таки доведеться розпізнавати граф з фотографії. Ця технологія разом з іншою з наступної статті допоможуть відрізнити ламані одна від одної та знайти координати точок відрізків, щоб визначити кути нахилу і розпізнати символ.


Image Segmentation
https://www.learnopencv.com/image-segmentation/
Ця стаття від того ж Сат’я Маліка про ділення картинки на зони чи, як їх називають, сегменти. Він розказує про те, що сегментація для комп’ютера це - розбиття картинки на групи за специфічним критерієм.
Спочатку Малік зазначає, що розбиття зазвичай зберігають двома способами: збіркою різних сегментів(superpixels), де кожна маленька частинка ніби існує окремо від інших, чи маскою(Semantic Segmentation), де схожі кольори чи частини відносяться до певної спільної фігури, що може бути використаним для прибирання фону з зображення і тому подібне.
Але найбільше наголосу в статті автор робить на так звану Instance Segmentation, тобто спосіб виявляти на зображенні об’єкти. Це надзвичайно необхідна річ, щоб на фотографії вирізняти ламані від просто затемнення чи тіні.
        Далі Малік розповідає про Panoptic Segmentation, тобто суміш Semantic segmentation та Instance Segmentation, який дозволяє майже з 99-ти відсотковим успіхом визначити, до якої з фігур відноситься конкретний піксель.
        Всі ці статті дуже сильно потрібні для розробки даного проекту за забезпечення розшифрування зображення назад у текст з фотографії.